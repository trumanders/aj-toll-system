// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250119155251_initWithSeedData3")]
    partial class initWithSeedData3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Persistence.Entities.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalMonthlyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VehicleInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleInfoId");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("Persistence.Entities.DailyFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<decimal>("TotalDailyFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DailyFees");
                });

            modelBuilder.Entity("Persistence.Entities.FeeInterval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("End")
                        .HasColumnType("time");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("FeeIntervals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new TimeSpan(0, 6, 30, 0, 0),
                            Fee = 9m,
                            Start = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            End = new TimeSpan(0, 15, 0, 0, 0),
                            Fee = 9m,
                            Start = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            End = new TimeSpan(0, 18, 30, 0, 0),
                            Fee = 9m,
                            Start = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            End = new TimeSpan(0, 7, 0, 0, 0),
                            Fee = 16m,
                            Start = new TimeSpan(0, 6, 30, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            End = new TimeSpan(0, 8, 30, 0, 0),
                            Fee = 16m,
                            Start = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            End = new TimeSpan(0, 15, 30, 0, 0),
                            Fee = 16m,
                            Start = new TimeSpan(0, 15, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            End = new TimeSpan(0, 18, 0, 0, 0),
                            Fee = 16m,
                            Start = new TimeSpan(0, 17, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            End = new TimeSpan(0, 8, 0, 0, 0),
                            Fee = 22m,
                            Start = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            End = new TimeSpan(0, 17, 0, 0, 0),
                            Fee = 22m,
                            Start = new TimeSpan(0, 15, 30, 0, 0)
                        });
                });

            modelBuilder.Entity("Persistence.Entities.MonthlyFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<decimal>("TotalMonthlyFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyFees");
                });

            modelBuilder.Entity("Persistence.Entities.TollPassage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PassageTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("TollPassages");
                });

            modelBuilder.Entity("Persistence.Entities.VehicleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("VehicleInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OwnerName = "John Thomas",
                            PlateNumber = "PTP461",
                            VehicleTypeId = 7
                        },
                        new
                        {
                            Id = 2,
                            OwnerName = "Chris Miller",
                            PlateNumber = "FJN740",
                            VehicleTypeId = 7
                        },
                        new
                        {
                            Id = 3,
                            OwnerName = "Jane Moore",
                            PlateNumber = "ZCX563",
                            VehicleTypeId = 7
                        },
                        new
                        {
                            Id = 4,
                            OwnerName = "Casey Moore",
                            PlateNumber = "VAT087",
                            VehicleTypeId = 8
                        },
                        new
                        {
                            Id = 5,
                            OwnerName = "Casey Davis",
                            PlateNumber = "CUL352",
                            VehicleTypeId = 8
                        },
                        new
                        {
                            Id = 6,
                            OwnerName = "Morgan Davis",
                            PlateNumber = "UXL821",
                            VehicleTypeId = 9
                        },
                        new
                        {
                            Id = 7,
                            OwnerName = "Chris Anderson",
                            PlateNumber = "MKW921",
                            VehicleTypeId = 9
                        },
                        new
                        {
                            Id = 8,
                            OwnerName = "Taylor Moore",
                            PlateNumber = "OLU514",
                            VehicleTypeId = 9
                        },
                        new
                        {
                            Id = 9,
                            OwnerName = "Alex Johnson",
                            PlateNumber = "TJY229",
                            VehicleTypeId = 2
                        },
                        new
                        {
                            Id = 10,
                            OwnerName = "Sam Wilson",
                            PlateNumber = "UHA649",
                            VehicleTypeId = 1
                        });
                });

            modelBuilder.Entity("Persistence.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsTollFree")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsTollFree = true,
                            TypeName = "Motorcycle"
                        },
                        new
                        {
                            Id = 2,
                            IsTollFree = true,
                            TypeName = "Tractor"
                        },
                        new
                        {
                            Id = 3,
                            IsTollFree = true,
                            TypeName = "Emergency"
                        },
                        new
                        {
                            Id = 4,
                            IsTollFree = true,
                            TypeName = "Diplomat"
                        },
                        new
                        {
                            Id = 5,
                            IsTollFree = true,
                            TypeName = "Foreign"
                        },
                        new
                        {
                            Id = 6,
                            IsTollFree = true,
                            TypeName = "Military"
                        },
                        new
                        {
                            Id = 7,
                            IsTollFree = false,
                            TypeName = "Car"
                        },
                        new
                        {
                            Id = 8,
                            IsTollFree = false,
                            TypeName = "Truck"
                        },
                        new
                        {
                            Id = 9,
                            IsTollFree = false,
                            TypeName = "Bus"
                        });
                });

            modelBuilder.Entity("Persistence.Entities.Billing", b =>
                {
                    b.HasOne("Persistence.Entities.VehicleInfo", "VehicleInfo")
                        .WithMany()
                        .HasForeignKey("VehicleInfoId");

                    b.Navigation("VehicleInfo");
                });

            modelBuilder.Entity("Persistence.Entities.VehicleInfo", b =>
                {
                    b.HasOne("Persistence.Entities.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });
#pragma warning restore 612, 618
        }
    }
}
